package onlyfun.caterpillar;

import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


//import org.apache.log4j.BasicConfigurator;
//import org.apache.log4j.Logger;

/**
 * Servlet implementation class HelloServlet
 */
public class HelloServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
//	private static Logger log = Logger.getLogger(HelloServlet.class);
    
	
    @Override
    public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException,IOException{
//    	BasicConfigurator.configure();
//    	log.trace("### [O] in service...");
		String connected = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
				+ request.getContextPath() + request.getServletPath();
		
//		log.trace("Connected : " + connected);
		
		System.out.println("Connected : " + connected);
		
		String sDef1 = request.getParameter("name");  // 取得doGet傳過來的參數
		String sDef2 = request.getParameter("pwd");  // 取得doGet傳過來的參數
		
		response.getWriter().append("Served at: " + sDef1 + ",  " + sDef2).append(request.getContextPath());
    }


//  /**
//  * @see HttpServlet#HttpServlet()
//  */
// public HelloServlet() {
//     super();
//     // TODO Auto-generated constructor stub
// }
//	/**
//	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
//	 */
//	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		// TODO Auto-generated method stub
//		response.getWriter().append("Served at: ").append(request.getContextPath());
//	}
//
//	/**
//	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
//	 */
//	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		// TODO Auto-generated method stub
//		doGet(request, response);
//	}

}
